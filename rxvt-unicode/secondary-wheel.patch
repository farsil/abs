--- doc/rxvt.1.man.in
+++ doc/rxvt.1.man.in
@@ -505,6 +505,10 @@ Turn on/off secondary screen (default enabled); resource
 .IX Item "-ssr|+ssr"
 Turn on/off secondary screen scroll (default enabled); resource
 \&\fBsecondaryScroll\fR.
+.IP "\fB\-ssw\fR|\fB+ssw\fR" 4
+.IX Item "-ssw|+ssw"
+Turn on/off secondary screen wheel support (default enabled); resource
+\&\fBsecondaryWheel\fR.
 .IP "\fB\-hold\fR|\fB+hold\fR" 4
 .IX Item "-hold|+hold"
 Turn on/off hold window after exit support. If enabled, @@RXVT_NAME@@
@@ -1056,10 +1060,17 @@ Turn on/off secondary screen scroll (default enabled). If this
 Turn on/off secondary screen (default enabled).
 .IP "\fBsecondaryScroll:\fR \fIboolean\fR" 4
 .IX Item "secondaryScroll: boolean"
-Turn on/off secondary screen scroll (default enabled). If this
+Turn on/off secondary screen scroll (default disabled). If this
 option is enabled, scrolls on the secondary screen will change the
 scrollback buffer and, when secondaryScreen is off, switching
 to/from the secondary screen will instead scroll the screen up.
+.IP "\fBsecondaryWheel:\fR \fIboolean\fR" 4
+.IX Item "secondaryWheel: boolean"
+Turn on/off secondary wheel (default enabled). If enabled, when on
+secondary screen, using the mouse wheel will not scroll in the buffer
+but will send 3 "fake" keystrokes (Up/Down arrow) to the running
+application. The emulated keystrokes allow natural scrolling in pagers like
+\fBmore\fR or \fBless\fR.
 .IP "\fBhold\fR: \fIboolean\fR" 4
 .IX Item "hold: boolean"
 Turn on/off hold window after exit support. If enabled, @@RXVT_NAME@@
--- src/command.C
+++ src/command.C
@@ -2237,10 +2237,46 @@ rxvt_term::button_release (XButtonEvent &ev)
                 }
               else
 # endif
+#ifndef NO_SECONDARY_SCREEN
                 {
-                  scr_page (dirn, lines);
-                  scrollBar.show (1);
+                  /* on SECONDARY screen, we send "fake" UP/DOWN keys instead
+                   * (this allows to scroll within man, less, etc) */
+                  if (option (Opt_secondaryWheel) && current_screen != PRIMARY)
+                    {
+                       XKeyEvent event;
+                       event.display     = ev.display;
+                       event.window      = ev.window;
+                       event.root        = ev.root;
+                       event.subwindow   = ev.subwindow;
+                       event.time        = ev.time;
+                       event.x           = ev.x;
+                       event.y           = ev.y;
+                       event.x_root      = ev.x_root;
+                       event.y_root      = ev.y_root;
+                       event.same_screen = ev.same_screen;
+                       event.state       = 0;
+                       event.keycode     = XKeysymToKeycode(ev.display,
+                                            (dirn == UP) ? XK_Up : XK_Down);
+                       for ( ; lines > 0; --lines)
+                         {
+                            event.type = KeyPress;
+                            XSendEvent (event.display, event.window, True,
+                                        KeyPressMask, (XEvent *) &event);
+                            event.type = KeyRelease;
+                            XSendEvent (event.display, event.window, True,
+                                        KeyPressMask, (XEvent *) &event);
+                          }
+                    }
+                  /* on PRIMARY screen, we scroll in the buffer */
+                  else
+#endif
+                    {
+                       scr_page (dirn, lines);
+                       scrollBar.show (1);
+                    }
+#ifndef NO_SECONDARY_SCREEN
                 }
+#endif
             }
             break;
 #endif
+++ src/init.C
@@ -561,6 +561,6 @@ rxvt_term::init_vars ()
   set_option (Opt_skipScroll);
   set_option (Opt_secondaryScreen);
-  set_option (Opt_secondaryScroll);
+  set_option (Opt_secondaryWheel);
   set_option (Opt_pastableTabs);
   set_option (Opt_intensityStyles);
   set_option (Opt_iso14755);
--- src/optinc.h
+++ src/optinc.h
@@ -27,6 +27,7 @@
  def(cursorBlink)
  def(secondaryScreen)
  def(secondaryScroll)
+ def(secondaryWheel)
  def(pastableTabs)
  def(cursorUnderline)
 #if ENABLE_FRILLS
+++ src/rsinc.h
@@ -104,6 +104,7 @@
 #ifndef NO_SECONDARY_SCREEN
   def (secondaryScreen)
   def (secondaryScroll)
+  def (secondaryWheel)
 #endif
 #if OFF_FOCUS_FADING
   def (fade)
+++ src/xdefaults.C
@@ -264,6 +264,7 @@ optList[] = {
 #ifndef NO_SECONDARY_SCREEN
               BOOL (Rs_secondaryScreen, "secondaryScreen", "ssc", Opt_secondaryScreen, 0, "enable secondary screen"),
               BOOL (Rs_secondaryScroll, "secondaryScroll", "ssr", Opt_secondaryScroll, 0, "enable secondary screen scroll"),
+              BOOL (Rs_secondaryWheel, "secondaryWheel", "ssw", Opt_secondaryWheel, 0, "enable secondary screen wheel"),
 #endif
 #if ENABLE_PERL
               RSTRG (Rs_perl_lib, "perl-lib", "string"), //, "colon-separated directories with extension scripts"),TODO
